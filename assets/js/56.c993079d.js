(window.webpackJsonp=window.webpackJsonp||[]).push([[56],{603:function(t,e,s){"use strict";s.r(e);var a=s(42),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"html-谈谈你对input元素中readonly和disabled属性的理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#html-谈谈你对input元素中readonly和disabled属性的理解"}},[t._v("#")]),t._v(" [html] 谈谈你对input元素中readonly和disabled属性的理解")]),t._v(" "),s("p",[t._v("readonly：把表单的属性设置为只读")]),t._v(" "),s("p",[t._v("只读字段是不能修改的。不过，用户仍然可以使用 tab 键切换到该字段，还可以选中或拷贝其文本，也可点击。")]),t._v(" "),s("p",[t._v("readonly 属性可以防止用户对值进行修改，直到满足某些条件为止（比如选中了一个复选框）。然后，需要使用 JavaScript 消除 readonly 值，将输入字段切换到可编辑状态。")]),t._v(" "),s("p",[t._v("disabled：禁用某个表单")]),t._v(" "),s("p",[t._v("被禁用的 input 元素既不可用，也不可点击。可以设置 disabled 属性，直到满足某些其他的条件为止（比如选择了一个复选框等等）。然后，就需要通过 JavaScript 来删除 disabled 值，将 input 元素的值切换为可用。")]),t._v(" "),s("p",[t._v("不同点")]),t._v(" "),s("p",[t._v("生效范围不同")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("readonly只对可输入的表单有效\ndisabled对所有表单生效\n")])])]),s("p",[t._v("效果不同")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("readonly设置只读，可以获取焦点\ndisabled直接阻止表单的一切操作\n")])])]),s("p",[t._v("提交不同")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("readonly可以正常提交\ndisabled会忽略提交\n")])])]),s("h2",{attrs:{id:"css-说说你对line-height是如何理解的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#css-说说你对line-height是如何理解的"}},[t._v("#")]),t._v(" [css] 说说你对line-height是如何理解的？")]),t._v(" "),s("p",[t._v("line-height 在日常用的最多的是让单行文字垂直居中（其实不需要设置 height，一个 line-height 即可）。\n因为 line-height - font-size 为行距，一般会近似平分到文字的上下两边，使文字看上去垂直居中。如果需要多行文字的垂直居中，还需要加上 vertical-align: middle;。")]),t._v(" "),s("p",[t._v("line-height 可以不设置单位，表示 font-size 的倍数。")]),t._v(" "),s("p",[t._v("另外对于非替换元素的纯内联元素，其高度是由 line-height 所决定的。")]),t._v(" "),s("p",[t._v("参考文章：张鑫旭大神 《CSS 世界》"),s("a",{attrs:{href:"https://juejin.im/post/5bf805fde51d453a68008e32",target:"_blank"}},[t._v("CSS 深入理解之 line-height")])]),t._v(" "),s("h2",{attrs:{id:"js-写一个方法验证是否为中文"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js-写一个方法验证是否为中文"}},[t._v("#")]),t._v(" [js] 写一个方法验证是否为中文")]),t._v(" "),s("h2",{attrs:{id:"软技能-来说说你对重绘和重排的理解-以及如何优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#软技能-来说说你对重绘和重排的理解-以及如何优化"}},[t._v("#")]),t._v(" [软技能] 来说说你对重绘和重排的理解，以及如何优化？")]),t._v(" "),s("p",[t._v("浏览器加载网页时会生成DOM树和CSSOM树")]),t._v(" "),s("p",[t._v("重绘：\n当盒子的位置、大小以及其他属性，例如颜色、字体大小等都确定下来之后，浏览器便把这些原色都按照各自的特性绘制一遍，将内容呈现在页面上。重绘是指一个元素外观的改变所触发的浏览器行为，浏览器会根据元素的新属性重新绘制，使元素呈现新的外观。\n触发重绘的条件：改变元素外观属性。如：color，background-color，font-size(???)等。")]),t._v(" "),s("p",[t._v("重排(回流)：\n当渲染树中的一部分(或全部)因为元素的规模尺寸，布局，隐藏等改变而需要重新构建, 这就称为回流(reflow)。每个页面至少需要一次回流，就是在页面第一次加载的时候。\n重绘和重排的关系：在回流的时候，浏览器会使渲染树中受到影响的部分失效，并重新构造这部分渲染树，完成回流后，浏览器会重新绘制受影响的部分到屏幕中，该过程称为重绘。\n所以，重排必定会引发重绘，但重绘不一定会引发重排。\n　　触发重排的条件：任何页面布局和几何属性的改变都会触发重排，\n比如：\n　　1、页面渲染初始化；(无法避免)\n　　2、添加或删除可见的DOM元素；\n　　3、元素位置的改变，或者使用动画；\n　　4、元素尺寸的改变——大小，外边距，边框；\n　　5、浏览器窗口尺寸的变化（resize事件发生时）；\n　　6、填充内容的改变，比如文本的改变或图片大小改变而引起的计算值宽度和高度的改变；\n触发重排的条件：改变元素的大小 位置 等如：width、height、pading、margin、position等，　添加删除DOM操作等\n重绘重排的代价：耗时，导致浏览器卡慢。")]),t._v(" "),s("p",[t._v("优化\n1、浏览器自己的优化：浏览器会维护1个队列，把所有会引起回流、重绘的操作放入这个队列，等队列中的操作到了一定的数量或者到了一定的时间间隔，浏览器就会flush队列，进行一个批处理。这样就会让多次的回流、重绘变成一次回流重绘。\n2、我们要注意的优化：我们要减少重绘和重排就是要减少对渲染树的操作，则我们可以合并多次的DOM和样式的修改。并减少对style样式的请求。\n（1）直接改变元素的className\n（2）display：none；先设置元素为display：none；然后进行页面布局等操作；设置完成后将元素设置为display：block；这样的话就只引发两次重绘和重排；\n（3）不要经常访问浏览器的flush队列属性；如果一定要访问，可以利用缓存。将访问的值存储起来，接下来使用就不会再引发回流；\n（4）使用cloneNode(true or false) 和 replaceChild 技术，引发一次回流和重绘；\n（5）将需要多次重排的元素，position属性设为absolute或fixed，元素脱离了文档流，它的变化不会影响到其他元素；\n（6）如果需要创建多个DOM节点，可以使用DocumentFragment创建完后一次性的加入document；")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://juejin.im/post/5c87b54ce51d455f7943dddb",target:"_blank"}},[t._v("在掘金上看到一篇不错的文章")])]),t._v(" "),s("form",{attrs:{action:"/pass",method:"get"}},[t._v("\n    user："),s("input",{attrs:{type:"text",name:"user",value:"name",onclick:"alert(0)"}}),t._v("\n    pass："),s("input",{attrs:{type:"password",name:"pass",value:"123",disabled:"",onclick:"alert(1)"}}),t._v("\n    addr："),s("input",{attrs:{type:"text",name:"pass",value:"杭州",readonly:"",onclick:"alert(2)"}}),t._v(" "),s("input",{attrs:{type:"submit",value:"提交"}})]),t._v(" "),s("div",{staticStyle:{height:"50px","line-height":"50px",border:"1px solid"}},[t._v("单行文字")]),t._v(" "),s("div",{staticStyle:{height:"200px","vertical-align":"middle",border:"1px solid"}},[t._v("多行文字多行文字多行文字多行文字多行文字多行文字多行文字多行文字多行文字多行文字多行文字多行文字多行文字多行文字多行文字多行文字多行文字多行文字多行文字多行文字多行文字多行文字多行文字多行文字多行文字多行文字多行文字多行文字多行文字多行文字多行文字多行文字多行文字多行文字多行文字多行文字多行文字多行文字多行文字多行文字多行文字多行文字多行文字")]),t._v(" "),s("div",{staticStyle:{height:"48px","line-height":"3",border:"1px solid"}},[t._v("单行文字")]),t._v(" "),s("div",{staticStyle:{height:"48px","line-height":"300%",border:"1px solid"}},[t._v("单行文字")]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//实现")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//使用的Unicode 编码 4e00 和 9fa5 分别表示第一个汉字和最后一个汉字的编码")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isChinese")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("str")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" re "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^[\\u4e00-\\u9fa5]+$")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" re"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br")])])])}),[],!1,null,null,null);e.default=n.exports}}]);