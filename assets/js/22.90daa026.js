(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{363:function(t,e,r){},398:function(t,e,r){"use strict";r(363)},609:function(t,e,r){"use strict";r.r(e);r(398);var a=r(42),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h2",{attrs:{id:"html-说说你对html中的置换元素和非置换元素的理解"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#html-说说你对html中的置换元素和非置换元素的理解"}},[t._v("#")]),t._v(" [html] 说说你对html中的置换元素和非置换元素的理解")]),t._v(" "),r("p",[t._v("置换元素（Replaced Element）")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",[r("code",[t._v("简单来说，置换元素可以设置宽 高,他们有自己的属性，和inline-block有一样的属性\n\n主要是指 img、input、textarea、select、object 等这类默认就有 CSS 格式化外表范围的元素。\n\n浏览器根据元素的标签和属性，来决定元素的具体显示内容\n\n例如：浏览器根据标签的src属性显示图片。根据type属性决定显示输入框还是按钮\n")])])]),r("p",[t._v("非置换元素（non-Replaced Element）:")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",[r("code",[t._v("就是除了 img、input、textarea、select、object 等置换元素以外的元素。\n\n内容直接展示给浏览器。例如标签，标签里的内容会被浏览器直接显示给用户\n")])])]),r("h2",{attrs:{id:"css-css的属性content有什么作用呢-有哪些场景可以用到"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#css-css的属性content有什么作用呢-有哪些场景可以用到"}},[t._v("#")]),t._v(" [css] css的属性content有什么作用呢？有哪些场景可以用到？")]),t._v(" "),r("p",[t._v("认识 :before 和 :after\n默认 display: inline；\n必须设置 content 属性，否则一切都是无用功， content 属性也只能应用在 :before 和 :after 伪元素上；\n默认user-select: none，就是 :before 和 :after 的内容无法被用户选中；\n伪元素可以和伪类结合使用形如：.target:hover:after。\n:before 和 :after 是在CSS2中提出来的，所以兼容IE8；\n::before 和 ::after 是CSS3中的写法，为了将伪类和伪元素区分开；\nCSS 中其他的伪元素有：::before、::after、::first-letter、::first-line、::selection 等；\n不可通过DOM使用，它只是纯粹的表象。在特殊情况下，从一个访问的角度来看，当前屏幕阅读不支持生成的内容。\ncontent 定义用法\ncontent 属性与 :before 及 :after 伪元素配合使用，在元素头或尾部来插入生成内容。")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",[r("code",[t._v("说明： 该属性用于定义元素之前或之后放置的生成内容。默认地，这往往是行内内容，不过该内容创建的盒子类型可以用属性 display 控制。\n\ncontent: uri value 外部资源\n\n.demo:after{\n  content: url(https://img-vip-ssl.a.88cdn.com/img/xunleiadmin/5b9889e14dcdc.png);\n}\n\n    引用符号\n属于引用符号的取值有 4 种，共 2 对，在 CSS 中用了语义较为清晰的关键词来表示： open-quote、 close-quote、no-open-quote、no-close-quote。\n\n  quotes 可以设置多组引用符号，用以应对次级引用：\n")])])]),r("h2",{attrs:{id:"js-attribute-和-property-有什么不同"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#js-attribute-和-property-有什么不同"}},[t._v("#")]),t._v(' [js] "attribute"和"property"有什么不同？')]),t._v(" "),r("p",[t._v("property是DOM中的属性，是JavaScript里的对象\nattribute是HTML标签上的特性，它的值只能够是字符串")]),t._v(" "),r("p",[t._v("每一个HTML标签都有默认属性，比如input标签，默认有value属性，id属性等，而这些属性就是property。而attribute是property的一个子集，是实际定义在HTML标签上的属性，这里也包括自定义的一些属性。")]),t._v(" "),r("p",[t._v("在操作 DOM 时，我们经常会操作 attribute 和 property。不过从两者的所属关系上来说： property 属于 DOM Object，而 atrribute 属于 HTML。")]),t._v(" "),r("p",[t._v("property 通常比较容易获取，并且有固定的值（当然，类似 JavaScript 的对象，我们可以添加自定义的值，只是这些不会被 DOM 所认识）。比如 el.id、el.value、el.style 都是 property 而设置也只需要 el.id=newId 即可。attribute 的值不是固定的，我们可以自己为 DOM 添加需要的属性（以前常常用来存放数据或者标志位，在 HTML5 有了 data-* 的属性后，一般就利用 data-* 来存放数据了）。对于 attribute 的设定和获取我们使用 setAttribute 和 getAttribute 两个方法。")]),t._v(" "),r("p",[t._v("在书写方面 property 对于大小写敏感；而 attribute 对于大小写不敏感。")]),t._v(" "),r("p",[t._v("总的来看 property 的值更偏向于标准而 attribute 的值更偏向于自定义和非标准。")]),t._v(" "),r("p",[t._v("attribute是html中标签的特性")]),t._v(" "),r("p",[t._v("property是js中的对象\n取值与赋值\nattribute赋值只能是字符串\nattribute需要用getAttribute和setAttribute方法进行取值赋值\nproperty可以赋任何值\nproperty用“.”属性就可以取值和赋值\n用property进行赋值后，用getAttribute的方式取到的是旧值\n如")]),t._v(" "),r("input",{attrs:{type:"text",value:"123"}}),t._v(" "),r("p",[t._v('用input.value = 456赋值之后，用input.getAttribute("value")获取到的仍然是123')]),t._v(" "),r("p",[t._v("但是用setAttribute赋值后，用property可以取到正确的值")]),t._v(" "),r("h2",{attrs:{id:"软技能-最近都流行些什么-你经常会浏览哪些网站"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#软技能-最近都流行些什么-你经常会浏览哪些网站"}},[t._v("#")]),t._v(" [软技能] 最近都流行些什么？你经常会浏览哪些网站？")]),t._v(" "),r("p",[t._v("github, zhihu, 慕课网, Google, stackoverflow")]),t._v(" "),r("div",{staticClass:"demo1"},[t._v("1")]),t._v(" "),r("div",{staticClass:"demo2"},[t._v("2")]),t._v(" "),r("p",[r("a",{staticClass:"demo3",attrs:{href:"https://www.baidu.com"}})]),t._v(" "),r("p",[r("a",{staticClass:"demo4",attrs:{href:"https://www.xunlei.com/",title:"精彩，一下就有"}},[t._v("精彩，一下就有"),r("dot",[t._v("...")])],1)]),t._v(" "),r("div",{staticClass:"demo5"})])}),[],!1,null,null,null);e.default=n.exports}}]);